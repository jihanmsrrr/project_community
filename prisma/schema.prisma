// Konfigurasi datasource untuk MySQL
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Konfigurasi generator untuk Prisma Client
generator client {
  provider = "prisma-client-js"
}

// Definisi Model-model Database

model organization_units {
  org_unit_id         BigInt    @id @default(autoincrement())
  nama_wilayah        String?   @db.VarChar(255)
  kode_bps            String?   @db.VarChar(50)
  nama_satker_bagian  String?   @db.VarChar(255)
  alamat              String?   @db.Text
  telepon             String?   @db.VarChar(50)
  web                 String?   @db.VarChar(255)
  parent_unit_id      BigInt?
  nama_wilayah_singkat String?   @db.VarChar(100)
  kepala_id           BigInt?   @unique

  kepala              users?                @relation("KepalaUnit", fields: [kepala_id], references: [user_id])
  pegawai             users[]               @relation("PegawaiDiUnit")
  parent              organization_units?   @relation("HirarkiUnit", fields: [parent_unit_id], references: [org_unit_id])
  children            organization_units[]  @relation("HirarkiUnit")
  teams               teams[]
}

model users {
  user_id                 BigInt    @id @default(autoincrement())
  nama_lengkap            String?   @db.VarChar(255)
  nip_baru                String?   @unique @db.VarChar(20)
  nip_lama                String?   @db.VarChar(20)
  email                   String?   @unique @db.VarChar(255)
  unit_kerja_id           BigInt?
  role                    String?   @db.VarChar(50)
  sso_id                  String?   @unique @db.VarChar(255)
  foto_url                String?   @db.VarChar(255)
  tempat_lahir            String?   @db.VarChar(100)
  tanggal_lahir           DateTime? @db.Date
  jenis_kelamin           String?   @db.VarChar(20)
  status_kepegawaian      String?   @db.VarChar(50)
  tmt_pns                 DateTime? @db.Date
  pangkat_golongan        String?   @db.VarChar(50)
  tmt_pangkat_golongan    DateTime? @db.Date
  jabatan_struktural      String?   @db.VarChar(255)
  jenjang_jabatan_fungsional String?   @db.VarChar(255)
  tmt_jabatan             DateTime? @db.Date
  pendidikan_terakhir     String?   @db.VarChar(255)
  masa_kerja_golongan     String?   @db.VarChar(50)
  masa_kerja_total        String?   @db.VarChar(50)
  tanggal_pensiun         DateTime? @db.Date
  sisa_masa_kerja         String?   @db.VarChar(50)
  grade                   String?   @db.VarChar(10)
  unit_kerja_eselon1      String?   @db.VarChar(255)
  unit_kerja_eselon2      String?   @db.VarChar(255)
  username                String?   @unique @db.VarChar(255) // Tambahkan kolom username
  password                String?   @db.VarChar(255)      // Tambahkan kolom password

  unit_kerja              organization_units?   @relation("PegawaiDiUnit", fields: [unit_kerja_id], references: [org_unit_id])
  berita_ditulis          news[]
  bahan_bacaan_diunggah    reading_materials[]
  komentar                comments[]
  likes                   likes[]
  bookmarks               bookmarks[]
  unit_kerja_dipimpin     organization_units[] @relation("KepalaUnit")
  tim_dipimpin            teams[]
  keanggotaan_tim         team_memberships[]
  riwayat_pendidikan      user_education_history[]
  riwayat_jabatan         user_job_history[]
  kompetensi              user_competencies[]
  prestasi                user_achievements[]
}

model news {
  news_id      BigInt    @id @unique // Pastikan ini BigInt
  judul        String
  abstrak      String 
  kategori     String
  kata_kunci   Json
  isi_berita   String @db.Text
  status       String
  nama_penulis String
  gambar_urls  Json      // <<< PENTING: Harus Json untuk array of objects
  savedAt      DateTime  // <<< PENTING: Pastikan ada field ini
  publishedAt  DateTime? // <<< PENTING: Pastikan ada '?' jika boleh null
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  penulisId    BigInt    // <<< PENTING: Pastikan tidak ada '?' jika mutlak

  penulis         users?     @relation(fields: [penulisId], references: [user_id])
  komentar        comments[]
  likes           likes[]
  bookmarks       bookmarks[]
}

model reading_materials {
  material_id     BigInt    @id @default(autoincrement())
  judul           String?   @db.VarChar(255)
  kategori        String?   @db.VarChar(100)
  sub_kategori    String?   @db.VarChar(100) // <<< BARU: Untuk sub-kategori
  deskripsi       String?   @db.Text         // <<< BARU: Untuk deskripsi panjang
  file_path       String?   @db.VarChar(255)
  uploader_id     BigInt?
  tanggal_upload  DateTime? @db.DateTime(0)
  hits            Int       @default(0)      // <<< BARU: Untuk menghitung akses

  uploader        users?    @relation(fields: [uploader_id], references: [user_id])
}

model comments {
  comment_id        BigInt    @id @default(autoincrement())
  news_id           BigInt?
  user_id           BigInt?
  username          String?   @db.VarChar(255)
  isi_komentar      String?   @db.Text
  tanggal_komentar  DateTime? @db.DateTime(0)
  parent_id         BigInt?

  berita            news?     @relation(fields: [news_id], references: [news_id])
  pengguna          users?    @relation(fields: [user_id], references: [user_id])
  parent            comments? @relation("CommentReplies", fields: [parent_id], references: [comment_id])
  replies           comments[] @relation("CommentReplies")
}

model teams {
  team_id       BigInt    @id @default(autoincrement())
  nama_tim      String?   @db.VarChar(255)
  singkatan     String?   @db.VarChar(50)
  deskripsi     String?   @db.Text
  ketua_tim_id  BigInt?   @unique
  org_unit_id   BigInt?

  ketua_tim     users?    @relation(fields: [ketua_tim_id], references: [user_id])
  unit_kerja    organization_units? @relation(fields: [org_unit_id], references: [org_unit_id])
  anggota       team_memberships[]
}

model team_memberships {
  team_member_id  BigInt  @id @default(autoincrement())
  team_id         BigInt?
  user_id         BigInt?
  posisi          String? @db.VarChar(100)

  tim             teams?  @relation(fields: [team_id], references: [team_id])
  pengguna        users?  @relation(fields: [user_id], references: [user_id])

  // TAMBAHKAN BARIS INI
  @@unique([team_id, user_id])
}

model likes {
  like_id     BigInt    @id @default(autoincrement())
  article_id  BigInt?
  user_id     BigInt?
  timestamp   DateTime? @db.DateTime(0)

  berita      news?     @relation(fields: [article_id], references: [news_id])
  pengguna    users?    @relation(fields: [user_id], references: [user_id])
}

model bookmarks {
  bookmark_id BigInt    @id @default(autoincrement())
  user_id     BigInt?
  article_id  BigInt?
  timestamp   DateTime? @db.DateTime(0)

  pengguna    users?    @relation(fields: [user_id], references: [user_id])
  berita      news?     @relation(fields: [article_id], references: [news_id])
}

model user_education_history {
  education_id            BigInt    @id @default(autoincrement())
  user_id                 BigInt?
  jenjang                 String?   @db.VarChar(50)
  nama_sekolah_institusi  String?   @db.VarChar(255)
  jurusan                 String?   @db.VarChar(255)
  pendidikan              String?   @db.VarChar(255)
  tahun_lulus             Int?
  tanggal_ijazah          DateTime? @db.Date

  pengguna                users?    @relation(fields: [user_id], references: [user_id])
}

model user_job_history {
  job_history_id  BigInt    @id @default(autoincrement())
  user_id         BigInt?
  jabatan         String?   @db.VarChar(255)
  unit_kerja      String?   @db.VarChar(255)
  periode_mulai   DateTime? @db.Date
  periode_selesai String?   @db.VarChar(50)
  no_sk           String?   @db.VarChar(255)
  tmt             DateTime? @db.Date

  pengguna        users?    @relation(fields: [user_id], references: [user_id])
}

model user_competencies {
  competency_id     BigInt    @id @default(autoincrement())
  user_id           BigInt?
  tanggal           DateTime? @db.Date
  nama_kompetensi   String?   @db.VarChar(255)
  penyelenggara     String?   @db.VarChar(255)
  nomor_sertifikat  String?   @db.VarChar(255)
  berlaku_sampai    DateTime? @db.Date

  pengguna          users?    @relation(fields: [user_id], references: [user_id])
}

model user_achievements {
  achievement_id        BigInt    @id @default(autoincrement())
  user_id               BigInt?
  tahun                 Int?
  nama_prestasi         String?   @db.VarChar(255)
  tingkat               String?   @db.VarChar(100)
  pemberi_penghargaan   String?   @db.VarChar(255)

  pengguna              users?    @relation(fields: [user_id], references: [user_id])
}