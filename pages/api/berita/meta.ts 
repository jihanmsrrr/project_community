// pages/api/berita/meta.ts
import type { NextApiRequest, NextApiResponse } from 'next';
import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse
) {
  if (req.method !== 'GET') {
    res.setHeader('Allow', ['GET']);
    return res.status(405).end(`Method ${req.method} Not Allowed`);
  }

  try {
    // Ambil SEMUA artikel, tetapi hanya kolom yang dibutuhkan
    const allArticles = await prisma.news.findMany({
      select: {
        kategori: true,
        nama_penulis: true,
      },
    });

    // Proses di sisi server untuk mendapatkan nilai unik
    const categories = Array.from(new Set(allArticles.map(item => item.kategori).filter(Boolean) as string[]));
    const authors = Array.from(new Set(allArticles.map(item => item.nama_penulis).filter(Boolean) as string[]));
    
    res.status(200).json({ categories, authors });
    
  } catch (error) {
    console.error("API /api/berita/meta Error:", error);
    res.status(500).json({ message: 'Gagal mengambil data meta dari server.' });
  }
}